import numpy as np

def f(x,c):
    return (1.0-np.exp(-c*x))

def relax(c=2.0, x0=0.1, tol=1e-6, maxit=100000): #basic relaxation method, setting starting point at x0=0.1
    x = float(x0)
    for it in range(1, maxit+1):
        x_new = f(x, c)
        if abs(x_new - x) < tol:
            return x_new, it
        x = x_new
    return x, it

root_b, it_b = relax(c=2.0, x0=0.1, tol=1e-6)
print(f"root ≈ {root_b:.8f}, iters = {it_b}")

def overrelax(omega, c=2.0, x0=0.1, tol=1e-6, maxit=100000):  #using overrelax method
    x = float(x0)
    for it in range(1, maxit+1):
        fx = f(x, c)
        x_new = (1.0 + omega)*fx - omega*x
        if abs(x_new - x) < tol:
            return x_new, it
        x = x_new
    return x, it

w = np.linspace(0.2, 1.0, 9)
for omega in w:
    root, it = overrelax(omega)
    print(f"At w = {omega:.1f}, root ≈{root:.8f}, iters = {it}")
